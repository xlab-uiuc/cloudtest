{
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.PersistenceProvider_Azure_ChangeWriteFormat(stringLength: null, useJsonForFirstWrite: True, useJsonForSecondWrite: False)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.PersistenceProvider_Azure_ChangeWriteFormat(stringLength: null, useJsonForFirstWrite: False, useJsonForSecondWrite: True)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.PersistenceProvider_Azure_ChangeWriteFormat(stringLength: 491264, useJsonForFirstWrite: True, useJsonForSecondWrite: False)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.PersistenceProvider_Azure_ChangeWriteFormat(stringLength: 491264, useJsonForFirstWrite: False, useJsonForSecondWrite: True)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.AzureTableStorage_ConvertToFromStorageFormat(stringLength: null, useJson: False)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.AzureTableStorage_ConvertToFromStorageFormat(stringLength: null, useJson: True)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.AzureTableStorage_ConvertToFromStorageFormat(stringLength: 982784, useJson: False)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.AzureTableStorage_ConvertToFromStorageFormat(stringLength: 491264, useJson: True)": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.AzureTableStorage_ConvertJsonToFromStorageFormatWithCustomJsonProperties": [
        "CreateIfNotExistsAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.PersistenceProvider_Memory_FixedLatency_WriteRead": [],
    "Tester.AzureUtils.Persistence.PersistenceProviderTests_Local.LoadClassByName": [],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureBlobStore.Grain_AzureBlobStore_Delete": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "DownloadContentAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureBlobStore.Grain_AzureBlobStore_Read": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "DownloadContentAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureBlobStore.Grain_GuidKey_AzureBlobStore_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "DownloadContentAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureBlobStore.Grain_LongKey_AzureBlobStore_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "DownloadContentAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureBlobStore.Grain_LongKeyExtended_AzureBlobStore_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "DownloadContentAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureBlobStore.Grain_GuidKeyExtended_AzureBlobStore_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "DownloadContentAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureBlobStore.Grain_AzureBlobStore_SiloRestart": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "DownloadContentAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_Delete": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "GetEntityAsync[T]",
        "DeleteEntityAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_Read": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "GetEntityAsync[T]",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_GuidKey_AzureTableGrainStorage_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "UpdateEntityAsync[T]",
        "SubmitTransactionAsync",
        "GetEntityAsync[T]",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_LongKey_AzureTableGrainStorage_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "UpdateEntityAsync[T]",
        "SubmitTransactionAsync",
        "GetEntityAsync[T]",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_LongKeyExtended_AzureTableGrainStorage_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "UpdateEntityAsync[T]",
        "SubmitTransactionAsync",
        "GetEntityAsync[T]",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_GuidKeyExtended_AzureTableGrainStorage_Read_Write": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "UpdateEntityAsync[T]",
        "SubmitTransactionAsync",
        "GetEntityAsync[T]",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_SiloRestart": [
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "UpdateEntityAsync[T]",
        "SubmitTransactionAsync",
        "GetEntityAsync[T]",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Lease.AzureBlobLeaseProviderTests.ProviderCanAcquireLeases": [
        "CreateIfNotExistsAsync",
        "UploadAsync"
    ],
    "Tester.AzureUtils.Lease.AzureBlobLeaseProviderTests.ProviderCanReleaseLeases": [
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "ReleaseAsync"
    ],
    "Tester.AzureUtils.Lease.AzureBlobLeaseProviderTests.ProviderCanRenewLeases": [
        "RenewAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync"
    ],
    "Tester.AzureUtils.Lease.AzureBlobLeaseProviderTests.Provider_TryAcquireLeaseWhichBelongToOtherEntity_Return_LeaseNotAvailable": [
        "CreateIfNotExistsAsync",
        "UploadAsync"
    ],
    "Tester.AzureUtils.Lease.AzureBlobLeaseProviderTests.Provider_TryRenewLeaseWithWrongToken_Return_InvalidToken": [
        "RenewAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync"
    ],
    "Tester.AzureUtils.Lease.AzureBlobLeaseProviderTests.Provider_LifeCycle_Acqurie_Renew_Release_ShouldBeAbleToAcquireLeaseOnTheSameResourceAfterRelease": [
        "RenewAsync",
        "ReleaseLeaseAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "RenewLeaseAsync"
    ],
    "Tester.AzureUtils.Lease.LeaseBasedQueueBalancerTests.LeaseBalancedQueueBalancer_SupportAutoScaleScenario": [
        "RenewAsync",
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "ReleaseAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "AcquireAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.Lease.LeaseBasedQueueBalancerTests.LeaseBalancedQueueBalancer_SupportUnexpectedNodeFailureScenerio": [
        "RenewAsync",
        "QueryEntitiesAsync",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "UploadAsync",
        "ReleaseAsync",
        "<QueryAsync>b__0",
        "SubmitTransactionAsync",
        "AcquireAsync",
        "InsertEntityAsync"
    ],
    "Tester.AzureUtils.General.GenericGrainsInAzureTableStorageTests.Generic_OnAzureTableStorage_LongNamedGrain_EchoValue": [],
    "Tester.AzureUtils.General.GenericGrainsInAzureTableStorageTests.Generic_OnAzureTableStorage_ShortNamedGrain_EchoValue": [],
    "Tester.AzureUtils.General.GenericGrainsInAzureBlobStorageTests.Generic_OnAzureBlobStorage_LongNamedGrain_EchoValue": [],
    "Tester.AzureUtils.General.GenericGrainsInAzureBlobStorageTests.Generic_OnAzureBlobStorage_ShortNamedGrain_EchoValue": [],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.Baseline_StreamRel": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.Baseline_StreamRel_RestartSilos": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_Baseline_StreamRel": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_Baseline_StreamRel": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_AddMany_Consumers": [],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_AddMany_Consumers": [],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_PubSub_MultiConsumerSameGrain": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_PubSub_MultiProducerSameGrain": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_PubSub_Unsubscribe": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_StreamRel_AllSilosRestart_PubSubCounts": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_StreamRel_AllSilosRestart": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_StreamRel_AllSilosRestart": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_StreamRel_SiloJoins": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_StreamRel_SiloDies_Consumer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_StreamRel_SiloDies_Consumer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_StreamRel_SiloDies_Producer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_StreamRel_SiloDies_Producer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_StreamRel_SiloRestarts_Consumer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_StreamRel_SiloRestarts_Consumer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_StreamRel_SiloRestarts_Producer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.AQ_StreamRel_SiloRestarts_Producer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.Streaming.Reliability.StreamReliabilityTests.SMS_AllSilosRestart_UnsubscribeConsumer": [
        "CreateAsync",
        "DeleteAsync",
        "CreateIfNotExistsAsync",
        "DeleteIfExistsAsync",
        "<QueryAsync>b__0"
    ],
    "UnitTests.StreamingTests.PullingAgentManagementTests.PullingAgents_ControlCmd_1": [
        "CreateIfNotExistsAsync",
        "ReceiveMessagesAsync"
    ],
    "UnitTests.HaloTests.Streaming.HaloStreamSubscribeTests.Halo_AzureQueue_ResubscribeTest_ConsumerProducer": [
        "DeleteMessageAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "DeleteAsync",
        "DeleteIfExistsAsync",
        "UpdateEntityAsync[T]",
        "GetEntityAsync[T]",
        "ReceiveMessagesAsync",
        "SendMessageAsync"
    ],
    "UnitTests.HaloTests.Streaming.HaloStreamSubscribeTests.Halo_AzureQueue_ResubscribeTest_ProducerConsumer": [
        "DeleteMessageAsync",
        "AddEntityAsync[T]",
        "CreateIfNotExistsAsync",
        "DeleteAsync",
        "DeleteIfExistsAsync",
        "UpdateEntityAsync[T]",
        "GetEntityAsync[T]",
        "ReceiveMessagesAsync",
        "SendMessageAsync"
    ],
    "UnitTests.RemindersTest.AzureRemindersTableTests.RemindersTable_Azure_Init": [
        "CreateAsync",
        "CreateIfNotExistsAsync"
    ],
    "UnitTests.RemindersTest.AzureRemindersTableTests.RemindersTable_Azure_RemindersRange": [
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "QueryEntitiesAsync"
    ],
    "UnitTests.RemindersTest.AzureRemindersTableTests.RemindersTable_Azure_RemindersParallelUpsert": [
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "QueryEntitiesAsync"
    ],
    "UnitTests.RemindersTest.AzureRemindersTableTests.RemindersTable_Azure_ReminderSimple": [
        "DeleteEntityInternal",
        "QueryEntityWithPartitionAndRowKeyAsync",
        "CreateAsync",
        "CreateIfNotExistsAsync",
        "<QueryAsync>b__0",
        "GetEntityAsync[T]",
        "MergeEntityAsync"
    ],
    "UnitTests.AsyncPrimitivesTests.AsyncPipelineTests.AsyncPipelineSimpleTest": [],
    "UnitTests.AsyncPrimitivesTests.AsyncPipelineTests.AsyncPipelineWaitTest": [],
    "UnitTests.AsyncPrimitivesTests.AsyncPipelineTests.AsyncPipelineSingleThreadedBlackBoxConsistencyTest": []
}