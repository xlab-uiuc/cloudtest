{
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_0.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+FaultInjection.SetReferencesAsync_IsEventuallyConsistent_WithDifferentInput": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.FetchesDataForExistingItemWhenExistingHasNoCommitTimestamp": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_4.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheAddReferencesAsyncMethod.ReplacesReferences": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpdateMergeEntityMethod.MergesMultipleEntities": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.DoesNotFetchDataForOldItem": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+TryReleaseAsync.FailsToReleaseLostLease": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheAddReferencesAsyncMethod.SkipsNoChangeInData": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogPageAsyncMethod.ReturnsUtcTimestamp": [],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.NonNullableModelCanOperateOnNullableDataWithNonNullValue": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessResponseWithRetryAsyncMethod.DoesNotRetryForOtherExceptionWhenReadingStream": [],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpdateMergeEntityMethod.MergesSingleEntity": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_MergeEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_Range.ReturnsEmptyForNonExistentEntity": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+TryAcquireAsync.ManyThreadsDoNotCauseException": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_Range.FetchesRangeOfEntities": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+TryReleaseAsync.ReleasesLease": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetDeletedSubjectsAsyncMethod.ReturnsDeletedThenAdded": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.FileDownloaderIntegrationTest+TheGetZipDirectoryReaderAsyncMethod.ReturnsPropertiesForFullDownload": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.DoesNotInsertNewTimerDisabledFromConfig": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_All.ReturnsAll": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+BreakAsync.AllowsSomeoneElseToAcquire": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_BreakLease",
        "Container_Delete"
    ],
    "NuGet.Insights.NuspecUtilityTest.HasDuplicateTextMetadataElementsCaseSensitive": [],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.OnlyLoadsPagesLazily": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheDeleteEntityMethod.DeletesMultipleEntities": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.RefreshesPageCacheIfMaxIsGreaterThanCachedPage": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogLeafAsyncMethod.ReturnsNullForCorruptedDependencyRange": [],
    "NuGet.Insights.NuspecUtilityTest.GetDuplicateDependencies": [],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+ExecuteBatchAsync.DeletesEntities": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCommitTimestampAsyncMethod.ReturnsCommitTimestamp": [],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.EnumeratesEmptyPrefix": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheClearDeletedSubjectsAsyncMethod.DeletesOnlyProvided": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+InsertOrReplaceAsync.ReplacesExistingEntity": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.LimitStreamTest.RestoresOverflowByteInBuffer": [],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogLeafAsyncMethod.AllowsNullListed": [],
    "NuGet.Insights.StorageLeaseServiceTest+RenewAsync.FailsToRenewLostLease": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_BreakLease",
        "Blob_RenewLease",
        "Container_Delete"
    ],
    "NuGet.Insights.PackageDownloadsClientTest.RejectsOldData": [],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_1.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.FetchesDataForExistingItemWhenInputHasNoCommitTimestamp": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheClearDeletedSubjectsAsyncMethod.FailsWithMultipleNonExistentRecords": [
        "Table_Create",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+FaultInjection.SetReferencesAsync_IsEventuallyConsistent_WithDeleteAll": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_5.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.EnumeratesAllEntitiesWithNoPrefix": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+ExecuteBatchAsync.SplitsBatches": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.UsesTickPrecision_Equals_InsidePage": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpdateReplaceEntityMethod.ReplacesMultipleEntities": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+ReplaceAsync.ReplacesExistingEntity": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheClearDeletedSubjectsAsyncMethod.IntegrationTest": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.FetchesDataForNewItem": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.WideEntities.ChunkStreamTest.AllowRereadingMoreData": [],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetDeletedSubjectsAsyncMethod.ReturnsNothingForCleanTable": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageFileServiceIntegrationTest.DoesNotRepeatHttpRequestsForOlderLeaf": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.FetchesDataForNewItem": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+ExecuteBatchAsync.FailsWhenCannotSplitBatch": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.UpdatesLastExecutedWhenExecuteThrows": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessResponseWithRetryAsyncMethod.RetriesForIOException": [],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessStreamWithRetryAsyncMethod.RetriesForIOException": [],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpdateMergeEntityMethod.OperatesAsTransaction": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+TryAcquireAsync.AcquiresWhenNotExists": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Container_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetReferencesToSubjectAsyncMethod.ReturnsSetReferences": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_UpdateEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.NuspecUtilityTest.HasNonAlphabetMetadataElements": [],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.AllowsMultipleSegmentsPerPrefix": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheDoesSubjectHaveOwnersAsyncMethod.ReturnsBasedOnLatestState": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_InsertEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.FetchesDataForUpdatedItem": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.WideEntities.ChunkStreamTest.AllowsAsyncRead": [],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.RefreshesIndexCacheIfMaxIsGreaterThanCachedPage": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpsertReplaceEntityMethod.AddsSingleEntity": [
        "Table_Create",
        "Table_UpdateEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheDeleteEntityMethod.DeletesSingleEntity": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_DeleteEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetReferencesToSubjectAsyncMethod.MatchesBasedOnTypesAndSubjectIdentity": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_UpdateEntity",
        "Table_InsertEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+ReleaseAsync.FailsToReleaseLostLease": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_2.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetDeletedSubjectsAsyncMethod.ReturnsDeleted": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteNowAsyncMethod.ReturnsFalseIfTimerFails": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.IncludesPartitionKeyMatchingPrefix": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ServiceCollectionExtensionsTest+IcuMode.CanDetectNotIcuMode": [],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.UsesTickPrecision_Equals_PageBound": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.NuspecUtilityTest.HasDuplicateMetadataElementsCaseSensitive": [],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessStreamWithRetryAsyncMethod.DoesNotRetryForOtherException": [],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpsertReplaceEntityMethod.MergesSingleEntity": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.NuspecUtilityTest.HasDuplicateTextMetadataElementsCaseInsensitive": [],
    "NuGet.Insights.TimerExecutionServiceTest+TheSetIsEnabledMethod.SetsIsEnabledOnExistingEntity": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Table_MergeEntity",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+ReplaceAsync.FailsWhenExistingEntityHasBeenDeleted": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_DeleteEntity",
        "Table_UpdateEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.AllowsProjection": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheAddEntityMethod.OperatesAsTransaction": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_PartitionKey.ReturnsAllInPartitionKey": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessResponseWithRetryAsyncMethod.RetriesForOperationCanceledException": [],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.DoesNotRefreshIndexWhenMinIsLowerThanIndex": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.ObservesAutoStartProperty": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheAddReferencesAsyncMethod.DoesNotWriteDataWhenSettingNewEmptyReferences": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.FetchesDataForExistingItemWhenExistingHasNoCommitTimestamp": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetDeletedSubjectsAsyncMethod.ObservesPagingTakeParameter": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpdateReplaceEntityMethod.ReplacesSingleEntity": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.ReturnsNullIfInputIsEqualToMax": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheAddEntityMethod.AddsMultipleEntities": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteNowAsyncMethod.IgnoresFrequency": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageDownloadsClientTest.ParsesDownloads": [],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.UsesTickPrecision_LessThan_PageBound": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.RefreshesIndexCacheIfMaxIsGreaterThanIndex": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.EnumeratesEmptyTable": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.VerifiedPackagesClientTest.ExecuteAsync": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.EnumeratesAllEntitiesWithMatchingPrefix": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.DoesNotFetchDataForExistingItemWhenInputHasNoCommitTimestamp": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.PackageDownloadsClientTest.ReturnsNewestData": [],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheDoesSubjectHaveOwnersAsyncMethod.ReturnsFalseForEmptyTable": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogLeafAsyncMethod.ParsesDeleteLeaf": [],
    "NuGet.Insights.NuspecUtilityTest.GetDuplicateNormalizedDependencyTargetFrameworks": [],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+IntegrationTest.PopulatesWideEntityProperties": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageReadmeIntegrationTest.ReturnsNoneForDeletedPackage": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.DoesNotFetchDataForExistingItemWhenInputAndExistingHasNoCommitTimestamp": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetDeletedSubjectsAsyncMethod.ReturnsDeletedFromOneOwnerAndAddedToAnotherInDifferentOperation": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.NuspecUtilityTest.GetDuplicateDependencyTargetFrameworks": [],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.UsesTickPrecision_LessThan_InsidePage": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.DoesNotFetchDataForOldItem": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.NonNullableModelCannotOperateOnNullableDataWithNullValue": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessStreamWithRetryAsyncMethod.RetriesForOperationCanceledException": [],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpsertMergeEntityMethod.MergesMultipleEntities": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.UsesTickPrecision_GreaterThan_PageBound": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+TryReleaseAsync.AllowsReleaseLeaseToBeReacquired": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete"
    ],
    "NuGet.Insights.ServiceCollectionExtensionsTest+HasNlsInvariantBehavior.CanDetectNlsInvariantMode": [],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessResponseWithRetryAsyncMethod.RetriesForHttpRequestExceptionWithInnerIOException": [],
    "NuGet.Insights.PackageReadmeIntegrationTest.ReturnsReadmeContentWithLegacyPattern": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheAddReferencesAsyncMethod.CanUpdateRowKeyPrefixes": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheDeleteEntityMethod.OperatesAsTransaction": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.HandlesSurrogatePairs": [
        "Table_Create",
        "Table_Batch",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.DoesNotAddNewTimerWhenExecuteReturnsFalse": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.SymbolPackageFileServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.ReturnsUnavailableForPackageWithNoSnupkg": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+TryRenewAsync.RenewsWhenLeaseIsStillActive": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_RenewLease",
        "Container_Delete"
    ],
    "NuGet.Insights.FileDownloaderIntegrationTest+TheGetZipDirectoryReaderAsyncMethod.CompletesAllDirectoyHttpRequestsBeforeReturning": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.RejectsUnexpectedUrlChangeOfNonLastPageItem": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_All.ReturnsEmptyForEmptyTable": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.AllowsNotExpandingPartitionKeys": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_AsyncEnumerable.AllowsPageSizeOf1": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ServiceCollectionExtensionsTest.DoesNotAddTypesASecondTime": [],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheAddReferencesAsyncMethod.CanUpdateJustData": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheClearDeletedSubjectsAsyncMethod.FailsWithSingleNonExistentRecord": [
        "Table_Create",
        "Table_DeleteEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.ChunkStreamTest.AllowsEmpty": [],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+ReplaceAsync.FailsWhenExistingEntityHasBeenChanged": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpdateReplaceEntityMethod.OperatesAsTransaction": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogIndexAsyncMethod.ReturnsRecentUtcTimestamp": [],
    "NuGet.Insights.NuspecUtilityTest.GetInvalidDependencyTargetFrameworks": [],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.DoesNotExecuteTimerDisabledFromStorage": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Table_MergeEntity",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogLeafAsyncMethod.AllowsInvalidVersionRangeString": [],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.NullableModelWithNullValueCanOperateOnNonNullableData": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.EnumeratesAllEntitiesInSinglePage": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+FaultInjection.SetReferencesAsync_IsEventuallyConsistent_WithSameInput": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+TryAcquireAsync.DoesNotAcquireAlreadyAcquiredLease": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Container_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheDeleteEntityMethod.FailsDeletingMultipleNonExistentEntities": [
        "Table_Create",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageDownloadsClientTest.HandlesIdWithNoVersion": [],
    "NuGet.Insights.TimerExecutionServiceTest+TheSetIsEnabledMethod.SetsIsEnabledOnNewEntity": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Table_MergeEntity",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogLeafAsyncMethod.ReturnsOriginalIsPrerelease": [],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.ReturnsExpectedNextTimestamps_Forward": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.NullableModelWithNonNullValueCanOperateOnNonNullableData": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpsertReplaceEntityMethod.MergesMultipleEntities": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheConstructor.RejectsDuplicateNames": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+InsertOrReplaceAsync.InsertsWhenNoEntityExists": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessResponseWithRetryAsyncMethod.DoesNotRetryForOtherExceptionWhenReadingString": [],
    "NuGet.Insights.PackageFileServiceIntegrationTest.UpdatesDataForNewCatalogLeaf": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheAddReferencesAsyncMethod.AddsReferences": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_UpdateEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpsertMergeEntityMethod.MergesSingleEntity": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_MergeEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetDeletedSubjectsAsyncMethod.DoesNotReturnDeleteFromOneOwnerAndAddedToAnotherInSameOperation": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_Batch",
        "Table_DeleteEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.EnumeratesAllEntitiesWithPrefixMatchingEverything": [
        "Table_Create",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.SymbolPackageFileServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.ReadsDataForPackageWithSnupkg": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.ServiceCollectionExtensionsTest+HasNlsInvariantBehavior.CanDetectNonNlsInvariantMode": [],
    "NuGet.Insights.TablePrefixScan.TablePrefixScannerTest.HandlesUpperAndLowerBounds": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_Batch",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheDeleteEntityMethod.FailsDeletingSingleNonExistentEntity": [
        "Table_Create",
        "Table_DeleteEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.StorageLeaseServiceTest+AcquireAsync.DoesNotAcquireWhenSomeoneElseLeasesFirst": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Container_Delete"
    ],
    "NuGet.Insights.HttpSourceExtensionsTest+TheProcessResponseWithRetryAsyncMethod.RetriesForHttpRequestExceptionWithInnerOperationCanceledException": [],
    "NuGet.Insights.SymbolPackageFileServiceIntegrationTest+TheGetZipDirectoryAsyncMethod.CanReadZipDirectoryFromStorage": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.ServiceCollectionExtensionsTest+IcuMode.CanDetectIcuMode": [],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogLeafAsyncMethod.ParsesDetailsLeaf": [],
    "NuGet.Insights.StorageLeaseServiceTest+TryRenewAsync.FailsToRenewLostLease": [
        "Container_GetProperties",
        "Container_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Blob_BreakLease",
        "Blob_RenewLease",
        "Container_Delete"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheUpdateBatchAsyncMethod.FetchesDataForExistingItemWhenInputAndExistingHasNoCommitTimestamp": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.PackageWideEntityServiceIntegrationTest+TheGetOrUpdateInfoAsyncMethod.FetchesDataForUpdatedItem": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.PackageFileServiceIntegrationTest.DoesNotRepeatHttpRequestsForSameLeaf": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.ChunkStreamTest.AllowRereadingLessData": [],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_7.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.ReadsNextPage": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+FaultInjection.SetReferencesAsync_IsEventuallyConsistent_WithUpdateExisting": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.DoesNotRunATimerThatHasRunRecently": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.ChunkStreamTest.AllowsMultipleReads": [],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync.AllowsNotFetchingData": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheUpsertMergeEntityMethod.AddsSingleEntity": [
        "Table_Create",
        "Table_MergeEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_PartitionKey.ReturnsEmptyForNonExistentEntity": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageReadmeIntegrationTest.ReturnsNoneForNoReadmeContent": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.RefreshesIndexCacheIfMaxIsGreaterThanCachedPageWithTwoPages": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync.ReturnsNullForNonExistentEntity": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.DoesNotUpdateLastExecutedWhenExecuteReturnsFalse": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+IntegrationTest.RoundTripsBytes": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogClientTest+TheGetCatalogLeafAsyncMethod.ReturnsOriginalIsPrereleaseEvenIfWrong": [],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+InsertAsync.FailsWhenEntityExists": [
        "Table_Create",
        "Table_Batch",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetDeletedSubjectsAsyncMethod.ReturnsNothingWhenThereHaveBeenNoDeletes": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_InsertEntity",
        "Table_UpdateEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.RunsATimerAgainIfTheFrequencyAllows": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Table_UpdateEntity",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.NuspecUtilityTest.HasDuplicateMetadataElementsCaseInsensitive": [],
    "NuGet.Insights.NuspecUtilityTest.GetUnexpectedValuesForBooleanMetadata": [],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteNowAsyncMethod.RunsEvenIfAlreadyRunning": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.RejectsUnexpectedTimestampChangeOfNonLastPageItem": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.RejectsUnexpectedChangeOfLastPageItem": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+RetrieveAsync_Range.AllowsNotFetchingData": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageOwnersClientTest.ExecuteAsync": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheAddReferencesAsyncMethod.CanDeleteAllReferences": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Batch",
        "Table_UpdateEntity",
        "Table_DeleteEntity",
        "Table_Delete"
    ],
    "NuGet.Insights.MutableTableTransactionalBatchTest+TheAddEntityMethod.AddsSingleEntity": [
        "Table_Create",
        "Table_InsertEntity",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.DoesNotExecuteExistingTimerDisabledFromConfig": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageDownloadsClientTest.HandlesEmptyArray": [],
    "NuGet.Insights.FileDownloaderIntegrationTest+TheGetZipDirectoryReaderAsyncMethod.CompletesAllDirectoyHttpRequestsBeforeReturningWhenRangeRequestsFail": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.ReturnsExpectedNextTimestamps_Backward": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.WideEntities.WideEntityServiceTest+InsertAsync.FailsWhenEntityIsTooLarge": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.NuspecUtilityTest.HasCollidingMetadataElements": [],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.RunsIfAlreadyRunning": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.ReturnsNullIfInputIsGreaterThanMax": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_6.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.PackageReadmeIntegrationTest.ReturnsEmbeddedReadmeContent": [
        "Table_QueryEntities",
        "Table_Create",
        "Table_InsertEntity",
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderIntegrationTest.UsesTickPrecision_GreaterThan_InsidePage": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+TheGetReferencesToSubjectAsyncMethod.ReturnsNothingForNoSubjects": [
        "Table_Create",
        "Table_QueryEntities",
        "Table_Delete"
    ],
    "NuGet.Insights.ReferenceTracking.ReferenceTrackerTest+InterleavedOperation_3.Execute": [
        "Table_Create",
        "Table_Delete"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.CanExecuteNewTimerByDefault": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_InsertEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ],
    "NuGet.Insights.CatalogCommitTimestampProviderTest.ReturnsMaxIfInputIsLessThanMax": [
        "Service_ListContainersSegment",
        "Service_ListQueuesSegment",
        "Table_Query"
    ],
    "NuGet.Insights.TimerExecutionServiceTest+TheExecuteAsyncMethod.ExecutesTimerEnabledForStorage": [
        "Container_GetProperties",
        "Container_Create",
        "Table_QueryEntities",
        "Table_Create",
        "Table_MergeEntity",
        "Blob_GetProperties",
        "BlockBlob_Upload",
        "Blob_AcquireLease",
        "Table_UpdateEntity",
        "Blob_ReleaseLease",
        "Container_Delete",
        "Table_Delete"
    ]
}