<?xml version="1.0" encoding="utf-8"?>
<TestRun id="e391d7ed-f1c2-46d7-b592-05d9f2275d78" name="anna@cloudtest-win10 2023-01-25 00:34:31" runUser="cloudtest-win10\anna" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2023-01-25T00:34:31.1917675+00:00" queuing="2023-01-25T00:34:31.1917680+00:00" start="2023-01-25T00:34:05.8614375+00:00" finish="2023-01-25T00:34:31.2357066+00:00" />
  <TestSettings name="default" id="164713b5-dae4-46f9-b70c-22b69a5c33c9">
    <Deployment runDeploymentRoot="anna_cloudtest-win10_2023-01-25_00_34_31" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="db74e508-9dff-420e-882d-b0140722e6f8" testId="0b215f6f-f880-25f9-96f3-5ab331be7164" testName="Tester.AzureUtils.Streaming.AQStreamingTests.AQ_09_ManySame_ManyProducerGrainsManyConsumerGrains" computerName="cloudtest-win10" duration="00:00:01.6990074" startTime="2023-01-25T00:34:30.8746891+00:00" endTime="2023-01-25T00:34:30.8747495+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="db74e508-9dff-420e-882d-b0140722e6f8">
      <Output>
        <ErrorInfo>
          <Message>Orleans.Storage.TableStorageUpdateConditionNotSatisfiedException : Table storage condition not Satisfied.  GrainType: PubSubRendezvousGrain, GrainId: pubsubrendezvous/AzureQueueProvider/null/64f4a5e6e2ad46c582abbdb3a8b520eb, TableName: OrleansGrainState, StoredETag: Unknown, CurrentETag: W/"datetime'2023-01-25T00%3A34%3A15.1112942Z'"&#xD;
---- Azure.RequestFailedException : The update condition specified in the request was not satisfied.
RequestId:e3479e4c-a002-0095-4f54-30a3b2000000
Time:2023-01-25T00:34:16.1097801Z&#xD;
Status: 412 (Precondition Failed)&#xD;
ErrorCode: UpdateConditionNotSatisfied&#xD;
&#xD;
Content:&#xD;
{"odata.error":{"code":"UpdateConditionNotSatisfied","message":{"lang":"en-US","value":"The update condition specified in the request was not satisfied.\nRequestId:e3479e4c-a002-0095-4f54-30a3b2000000\nTime:2023-01-25T00:34:16.1097801Z"}}}&#xD;
&#xD;
Headers:&#xD;
Cache-Control: no-cache&#xD;
Server: Windows-Azure-Table/1.0,Microsoft-HTTPAPI/2.0&#xD;
x-ms-request-id: e3479e4c-a002-0095-4f54-30a3b2000000&#xD;
x-ms-client-request-id: e81c1e4a-5b0a-4f36-9767-9e8d4e1c8ec6&#xD;
x-ms-version: REDACTED&#xD;
X-Content-Type-Options: REDACTED&#xD;
Date: Wed, 25 Jan 2023 00:34:15 GMT&#xD;
Connection: keep-alive&#xD;
Content-Type: application/json; odata=minimalmetadata; streaming=true; charset=utf-8&#xD;
Content-Length: 239&#xD;
</Message>
          <StackTrace>   at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 192&#xD;
   at Orleans.Storage.AzureTableGrainStorage.WriteStateAsync[T](String grainType, GrainId grainId, IGrainState`1 grainState) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 113&#xD;
   at Orleans.Core.StateStorageBridge`1.WriteStateAsync() in C:\Users\anna\orleans\src\Orleans.Runtime\Storage\StateStorageBridge.cs:line 93&#xD;
   at Orleans.Streams.PubSubRendezvousGrain.RegisterConsumer(GuidId subscriptionId, QualifiedStreamId streamId, GrainId streamConsumer, String filterData) in C:\Users\anna\orleans\src\Orleans.Streaming\PubSub\PubSubRendezvousGrain.cs:line 181&#xD;
   at Orleans.Runtime.TaskRequest.Invoke() in C:\Users\anna\orleans\src\Orleans.Core.Abstractions\Runtime\GrainReference.cs:line 690&#xD;
--- End of stack trace from previous location ---&#xD;
   at Orleans.Serialization.Invocation.ResponseCompletionSource.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token) in C:\Users\anna\orleans\src\Orleans.Serialization\Invocation\ResponseCompletionSource.cs:line 98&#xD;
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)&#xD;
--- End of stack trace from previous location ---&#xD;
   at Orleans.Streams.StreamConsumer`1.SubscribeAsyncImpl(IAsyncObserver`1 observer, IAsyncBatchObserver`1 batchObserver, StreamSequenceToken token, String filterData) in C:\Users\anna\orleans\src\Orleans.Streaming\Internal\StreamConsumer.cs:line 113&#xD;
   at UnitTests.Grains.ConsumerObserver.BecomeConsumer(Guid streamId, IStreamProvider streamProvider, String streamNamespace) in C:\Users\anna\orleans\test\Grains\TestInternalGrains\StreamingGrain.cs:line 124&#xD;
   at UnitTests.Grains.Streaming_ConsumerGrain.BecomeConsumer(Guid streamId, String providerToUse, String streamNamespace) in C:\Users\anna\orleans\test\Grains\TestInternalGrains\StreamingGrain.cs:line 679&#xD;
   at Orleans.Runtime.TaskRequest.CompleteInvokeAsync(Task resultTask) in C:\Users\anna\orleans\src\Orleans.Core.Abstractions\Runtime\GrainReference.cs:line 707&#xD;
--- End of stack trace from previous location ---&#xD;
   at Orleans.Serialization.Invocation.ResponseCompletionSource.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token) in C:\Users\anna\orleans\src\Orleans.Serialization\Invocation\ResponseCompletionSource.cs:line 98&#xD;
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)&#xD;
--- End of stack trace from previous location ---&#xD;
   at UnitTests.StreamingTests.ConsumerProxy.BecomeConsumer(Guid streamId, String providerToUse) in C:\Users\anna\orleans\test\TesterInternal\StreamingTests\StreamTestHelperClasses.cs:line 296&#xD;
   at UnitTests.StreamingTests.ConsumerProxy.NewConsumerProxy(Guid streamId, String streamProvider, IStreaming_ConsumerGrain[] targets, ILogger logger, IInternalGrainFactory grainFactory) in C:\Users\anna\orleans\test\TesterInternal\StreamingTests\StreamTestHelperClasses.cs:line 193&#xD;
   at UnitTests.StreamingTests.SingleStreamTestRunner.StreamTest_09_ManySame_ManyProducerGrainsManyConsumerGrains() in C:\Users\anna\orleans\test\TesterInternal\StreamingTests\SingleStreamTestRunner.cs:line 168&#xD;
   at Tester.AzureUtils.Streaming.AQStreamingTests.AQ_09_ManySame_ManyProducerGrainsManyConsumerGrains() in C:\Users\anna\orleans\test\Extensions\TesterAzureUtils\Streaming\AQStreamingTests.cs:line 146&#xD;
--- End of stack trace from previous location ---&#xD;
----- Inner Stack Trace -----&#xD;
   at Azure.Data.Tables.TableRestClient.UpdateEntityAsync(String table, String partitionKey, String rowKey, Nullable`1 timeout, String ifMatch, IDictionary`2 tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken)&#xD;
   at Azure.Data.Tables.TableClient.UpdateEntityAsync[T](T entity, ETag ifMatch, TableUpdateMode mode, CancellationToken cancellationToken)&#xD;
   at Orleans.Persistence.AzureStorage.AzureTableDataManager`1.UpdateTableEntryAsync(T data, ETag dataEtag) in C:\Users\anna\orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs:line 322&#xD;
   at Orleans.Storage.AzureTableGrainStorage.GrainStateTableDataManager.Write(TableEntity entity) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 457&#xD;
   at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 188&#xD;
--- End of stack trace from previous location ---&#xD;
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="Tester.AzureUtils.Streaming.AQStreamingTests.AQ_09_ManySame_ManyProducerGrainsManyConsumerGrains" storage="c:\users\anna\orleans\test\extensions\testerazureutils\bin\debug\net7.0\tester.azureutils.dll" id="0b215f6f-f880-25f9-96f3-5ab331be7164">
      <Execution id="db74e508-9dff-420e-882d-b0140722e6f8" />
      <TestMethod codeBase="C:\Users\anna\orleans\test\Extensions\TesterAzureUtils\bin\Debug\net7.0\Tester.AzureUtils.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="Tester.AzureUtils.Streaming.AQStreamingTests" name="AQ_09_ManySame_ManyProducerGrainsManyConsumerGrains" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="0b215f6f-f880-25f9-96f3-5ab331be7164" executionId="db74e508-9dff-420e-882d-b0140722e6f8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" passed="0" failed="1" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 7.0.2)&#xD;
[xUnit.net 00:00:01.25]   Discovering: Tester.AzureUtils (method display = ClassAndMethod, method display options = None)&#xD;
[xUnit.net 00:00:01.46]   Discovered:  Tester.AzureUtils (found 246 test cases)&#xD;
[xUnit.net 00:00:01.47]   Starting:    Tester.AzureUtils (parallel test collections = off, max threads = 4)&#xD;
[xUnit.net 00:00:22.07]       Orleans.Storage.TableStorageUpdateConditionNotSatisfiedException : Table storage condition not Satisfied.  GrainType: PubSubRendezvousGrain, GrainId: pubsubrendezvous/AzureQueueProvider/null/64f4a5e6e2ad46c582abbdb3a8b520eb, TableName: OrleansGrainState, StoredETag: Unknown, CurrentETag: W/"datetime'2023-01-25T00%3A34%3A15.1112942Z'"&#xD;
[xUnit.net 00:00:22.07]       ---- Azure.RequestFailedException : The update condition specified in the request was not satisfied.
RequestId:e3479e4c-a002-0095-4f54-30a3b2000000
Time:2023-01-25T00:34:16.1097801Z&#xD;
[xUnit.net 00:00:22.07]       Status: 412 (Precondition Failed)&#xD;
[xUnit.net 00:00:22.07]       ErrorCode: UpdateConditionNotSatisfied&#xD;
[xUnit.net 00:00:22.07]       &#xD;
[xUnit.net 00:00:22.07]       Content:&#xD;
[xUnit.net 00:00:22.07]       {"odata.error":{"code":"UpdateConditionNotSatisfied","message":{"lang":"en-US","value":"The update condition specified in the request was not satisfied.\nRequestId:e3479e4c-a002-0095-4f54-30a3b2000000\nTime:2023-01-25T00:34:16.1097801Z"}}}&#xD;
[xUnit.net 00:00:22.07]       &#xD;
[xUnit.net 00:00:22.07]       Headers:&#xD;
[xUnit.net 00:00:22.07]       Cache-Control: no-cache&#xD;
[xUnit.net 00:00:22.07]       Server: Windows-Azure-Table/1.0,Microsoft-HTTPAPI/2.0&#xD;
[xUnit.net 00:00:22.07]       x-ms-request-id: e3479e4c-a002-0095-4f54-30a3b2000000&#xD;
[xUnit.net 00:00:22.07]       x-ms-client-request-id: e81c1e4a-5b0a-4f36-9767-9e8d4e1c8ec6&#xD;
[xUnit.net 00:00:22.07]       x-ms-version: REDACTED&#xD;
[xUnit.net 00:00:22.07]       X-Content-Type-Options: REDACTED&#xD;
[xUnit.net 00:00:22.07]       Date: Wed, 25 Jan 2023 00:34:15 GMT&#xD;
[xUnit.net 00:00:22.07]       Connection: keep-alive&#xD;
[xUnit.net 00:00:22.07]       Content-Type: application/json; odata=minimalmetadata; streaming=true; charset=utf-8&#xD;
[xUnit.net 00:00:22.07]       Content-Length: 239&#xD;
[xUnit.net 00:00:22.07]       &#xD;
[xUnit.net 00:00:22.07]       Stack Trace:&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(192,0): at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(113,0): at Orleans.Storage.AzureTableGrainStorage.WriteStateAsync[T](String grainType, GrainId grainId, IGrainState`1 grainState)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Orleans.Runtime\Storage\StateStorageBridge.cs(93,0): at Orleans.Core.StateStorageBridge`1.WriteStateAsync()&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Orleans.Streaming\PubSub\PubSubRendezvousGrain.cs(181,0): at Orleans.Streams.PubSubRendezvousGrain.RegisterConsumer(GuidId subscriptionId, QualifiedStreamId streamId, GrainId streamConsumer, String filterData)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Orleans.Core.Abstractions\Runtime\GrainReference.cs(690,0): at Orleans.Runtime.TaskRequest.Invoke()&#xD;
[xUnit.net 00:00:22.08]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Orleans.Serialization\Invocation\ResponseCompletionSource.cs(98,0): at Orleans.Serialization.Invocation.ResponseCompletionSource.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)&#xD;
[xUnit.net 00:00:22.08]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)&#xD;
[xUnit.net 00:00:22.08]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Orleans.Streaming\Internal\StreamConsumer.cs(113,0): at Orleans.Streams.StreamConsumer`1.SubscribeAsyncImpl(IAsyncObserver`1 observer, IAsyncBatchObserver`1 batchObserver, StreamSequenceToken token, String filterData)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\test\Grains\TestInternalGrains\StreamingGrain.cs(124,0): at UnitTests.Grains.ConsumerObserver.BecomeConsumer(Guid streamId, IStreamProvider streamProvider, String streamNamespace)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\test\Grains\TestInternalGrains\StreamingGrain.cs(679,0): at UnitTests.Grains.Streaming_ConsumerGrain.BecomeConsumer(Guid streamId, String providerToUse, String streamNamespace)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Orleans.Core.Abstractions\Runtime\GrainReference.cs(707,0): at Orleans.Runtime.TaskRequest.CompleteInvokeAsync(Task resultTask)&#xD;
[xUnit.net 00:00:22.08]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Orleans.Serialization\Invocation\ResponseCompletionSource.cs(98,0): at Orleans.Serialization.Invocation.ResponseCompletionSource.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)&#xD;
[xUnit.net 00:00:22.08]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)&#xD;
[xUnit.net 00:00:22.08]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\test\TesterInternal\StreamingTests\StreamTestHelperClasses.cs(296,0): at UnitTests.StreamingTests.ConsumerProxy.BecomeConsumer(Guid streamId, String providerToUse)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\test\TesterInternal\StreamingTests\StreamTestHelperClasses.cs(193,0): at UnitTests.StreamingTests.ConsumerProxy.NewConsumerProxy(Guid streamId, String streamProvider, IStreaming_ConsumerGrain[] targets, ILogger logger, IInternalGrainFactory grainFactory)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\test\TesterInternal\StreamingTests\SingleStreamTestRunner.cs(168,0): at UnitTests.StreamingTests.SingleStreamTestRunner.StreamTest_09_ManySame_ManyProducerGrainsManyConsumerGrains()&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\test\Extensions\TesterAzureUtils\Streaming\AQStreamingTests.cs(146,0): at Tester.AzureUtils.Streaming.AQStreamingTests.AQ_09_ManySame_ManyProducerGrainsManyConsumerGrains()&#xD;
[xUnit.net 00:00:22.08]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:22.08]         ----- Inner Stack Trace -----&#xD;
[xUnit.net 00:00:22.08]            at Azure.Data.Tables.TableRestClient.UpdateEntityAsync(String table, String partitionKey, String rowKey, Nullable`1 timeout, String ifMatch, IDictionary`2 tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken)&#xD;
[xUnit.net 00:00:22.08]            at Azure.Data.Tables.TableClient.UpdateEntityAsync[T](T entity, ETag ifMatch, TableUpdateMode mode, CancellationToken cancellationToken)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs(322,0): at Orleans.Persistence.AzureStorage.AzureTableDataManager`1.UpdateTableEntryAsync(T data, ETag dataEtag)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(457,0): at Orleans.Storage.AzureTableGrainStorage.GrainStateTableDataManager.Write(TableEntity entity)&#xD;
[xUnit.net 00:00:22.08]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(188,0): at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag)&#xD;
[xUnit.net 00:00:22.08]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:22.08]         &#xD;
[xUnit.net 00:00:22.11]   Finished:    Tester.AzureUtils&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="cloudtest-win10" outcome="Min" timestamp="2023-01-25T00:34:30.8678520+00:00">
        <Text>[xUnit.net 00:00:22.07]     Tester.AzureUtils.Streaming.AQStreamingTests.AQ_09_ManySame_ManyProducerGrainsManyConsumerGrains [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="cloudtest-win10" outcome="Warning" timestamp="2023-01-25T00:34:31.0411200+00:00">
        <Text>Data collector 'Blame' message: All tests finished running, Sequence file will not be generated.</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>