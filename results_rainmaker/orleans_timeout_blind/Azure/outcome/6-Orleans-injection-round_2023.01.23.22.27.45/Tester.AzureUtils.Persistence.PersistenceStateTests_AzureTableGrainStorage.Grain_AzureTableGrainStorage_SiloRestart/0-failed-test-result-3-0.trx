<?xml version="1.0" encoding="utf-8"?>
<TestRun id="8bd79291-7145-4fb4-9323-866f22ff9dfc" name="anna@cloudtest-win10 2023-01-23 22:31:54" runUser="cloudtest-win10\anna" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2023-01-23T22:31:54.2232571+00:00" queuing="2023-01-23T22:31:54.2232582+00:00" start="2023-01-23T22:31:41.4183314+00:00" finish="2023-01-23T22:32:23.5574288+00:00" />
  <TestSettings name="default" id="c2753d2a-8ef4-406f-a9db-ef04c394698e">
    <Deployment runDeploymentRoot="anna_cloudtest-win10_2023-01-23_22_31_54" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="1e8e09ed-9ec6-4b12-abbc-7e4cb04b1f3a" testId="5b7e1b06-615e-d006-acf4-96177d2222b3" testName="Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_SiloRestart" computerName="cloudtest-win10" duration="00:00:01.3037165" startTime="2023-01-23T22:31:53.9573514+00:00" endTime="2023-01-23T22:31:53.9575203+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1e8e09ed-9ec6-4b12-abbc-7e4cb04b1f3a">
      <Output>
        <StdOut>ClusterId=testcluster-2023-01-23t22-31-45-242 ServiceId=413167fbdab04be6b3673754e5db370b</StdOut>
        <ErrorInfo>
          <Message>Orleans.Storage.TableStorageUpdateConditionNotSatisfiedException : Table storage condition not Satisfied.  GrainType: state, GrainId: new-test-storage-grain/9d066b10bd274a5ea10e1c7ff874fa8d, TableName: OrleansGrainState, StoredETag: Unknown, CurrentETag: &#xD;
---- Azure.RequestFailedException : The specified entity already exists.
RequestId:41f20d74-e002-003d-647a-2f3d1c000000
Time:2023-01-23T22:31:53.9124464Z&#xD;
Status: 409 (Conflict)&#xD;
ErrorCode: EntityAlreadyExists&#xD;
&#xD;
Content:&#xD;
{"odata.error":{"code":"EntityAlreadyExists","message":{"lang":"en-US","value":"The specified entity already exists.\nRequestId:41f20d74-e002-003d-647a-2f3d1c000000\nTime:2023-01-23T22:31:53.9124464Z"}}}&#xD;
&#xD;
Headers:&#xD;
Cache-Control: no-cache&#xD;
Server: Windows-Azure-Table/1.0,Microsoft-HTTPAPI/2.0&#xD;
x-ms-request-id: 41f20d74-e002-003d-647a-2f3d1c000000&#xD;
x-ms-client-request-id: 80fce43b-7e48-4cc2-a69a-ce3a6f9f7875&#xD;
x-ms-version: REDACTED&#xD;
X-Content-Type-Options: REDACTED&#xD;
Preference-Applied: REDACTED&#xD;
Date: Mon, 23 Jan 2023 22:31:53 GMT&#xD;
Connection: keep-alive&#xD;
Content-Type: application/json; odata=minimalmetadata; streaming=true; charset=utf-8&#xD;
Content-Length: 203&#xD;
</Message>
          <StackTrace>   at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 192&#xD;
   at Orleans.Storage.AzureTableGrainStorage.WriteStateAsync[T](String grainType, GrainId grainId, IGrainState`1 grainState) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 113&#xD;
   at Orleans.Core.StateStorageBridge`1.WriteStateAsync() in C:\Users\anna\orleans\src\Orleans.Runtime\Storage\StateStorageBridge.cs:line 93&#xD;
   at Orleans.Runtime.TaskRequest.Invoke() in C:\Users\anna\orleans\src\Orleans.Core.Abstractions\Runtime\GrainReference.cs:line 690&#xD;
--- End of stack trace from previous location ---&#xD;
   at Orleans.Serialization.Invocation.ResponseCompletionSource.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token) in C:\Users\anna\orleans\src\Orleans.Serialization\Invocation\ResponseCompletionSource.cs:line 98&#xD;
   at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)&#xD;
--- End of stack trace from previous location ---&#xD;
   at TestExtensions.Runners.GrainPersistenceTestsRunner.Grain_GrainStorage_SiloRestart() in C:\Users\anna\orleans\test\TesterInternal\TestRunners\GrainPersistenceTestRunner.cs:line 300&#xD;
   at Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_SiloRestart() in C:\Users\anna\orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceStateTests_AzureTableGrainStorage.cs:line 87&#xD;
--- End of stack trace from previous location ---&#xD;
----- Inner Stack Trace -----&#xD;
   at Azure.Data.Tables.TableRestClient.InsertEntityAsync(String table, Nullable`1 timeout, Nullable`1 responsePreference, IDictionary`2 tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken)&#xD;
   at Azure.Data.Tables.TableClient.AddEntityAsync[T](T entity, CancellationToken cancellationToken)&#xD;
   at Orleans.Persistence.AzureStorage.AzureTableDataManager`1.CreateTableEntryAsync(T data) in C:\Users\anna\orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs:line 171&#xD;
   at Orleans.Storage.AzureTableGrainStorage.GrainStateTableDataManager.Write(TableEntity entity) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 457&#xD;
   at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag) in C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs:line 188&#xD;
--- End of stack trace from previous location ---&#xD;
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_SiloRestart" storage="c:\users\anna\orleans\test\extensions\testerazureutils\bin\debug\net7.0\tester.azureutils.dll" id="5b7e1b06-615e-d006-acf4-96177d2222b3">
      <Execution id="1e8e09ed-9ec6-4b12-abbc-7e4cb04b1f3a" />
      <TestMethod codeBase="C:\Users\anna\orleans\test\Extensions\TesterAzureUtils\bin\Debug\net7.0\Tester.AzureUtils.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage" name="Grain_AzureTableGrainStorage_SiloRestart" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="5b7e1b06-615e-d006-acf4-96177d2222b3" executionId="1e8e09ed-9ec6-4b12-abbc-7e4cb04b1f3a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" passed="0" failed="1" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.4.5+1caef2f33e (64-bit .NET 7.0.2)&#xD;
[xUnit.net 00:00:01.24]   Discovering: Tester.AzureUtils (method display = ClassAndMethod, method display options = None)&#xD;
[xUnit.net 00:00:01.45]   Discovered:  Tester.AzureUtils (found 246 test cases)&#xD;
[xUnit.net 00:00:01.47]   Starting:    Tester.AzureUtils (parallel test collections = off, max threads = 4)&#xD;
[xUnit.net 00:00:09.60]       Orleans.Storage.TableStorageUpdateConditionNotSatisfiedException : Table storage condition not Satisfied.  GrainType: state, GrainId: new-test-storage-grain/9d066b10bd274a5ea10e1c7ff874fa8d, TableName: OrleansGrainState, StoredETag: Unknown, CurrentETag: &#xD;
[xUnit.net 00:00:09.60]       ---- Azure.RequestFailedException : The specified entity already exists.
RequestId:41f20d74-e002-003d-647a-2f3d1c000000
Time:2023-01-23T22:31:53.9124464Z&#xD;
[xUnit.net 00:00:09.60]       Status: 409 (Conflict)&#xD;
[xUnit.net 00:00:09.60]       ErrorCode: EntityAlreadyExists&#xD;
[xUnit.net 00:00:09.60]       &#xD;
[xUnit.net 00:00:09.60]       Content:&#xD;
[xUnit.net 00:00:09.60]       {"odata.error":{"code":"EntityAlreadyExists","message":{"lang":"en-US","value":"The specified entity already exists.\nRequestId:41f20d74-e002-003d-647a-2f3d1c000000\nTime:2023-01-23T22:31:53.9124464Z"}}}&#xD;
[xUnit.net 00:00:09.60]       &#xD;
[xUnit.net 00:00:09.60]       Headers:&#xD;
[xUnit.net 00:00:09.60]       Cache-Control: no-cache&#xD;
[xUnit.net 00:00:09.60]       Server: Windows-Azure-Table/1.0,Microsoft-HTTPAPI/2.0&#xD;
[xUnit.net 00:00:09.60]       x-ms-request-id: 41f20d74-e002-003d-647a-2f3d1c000000&#xD;
[xUnit.net 00:00:09.60]       x-ms-client-request-id: 80fce43b-7e48-4cc2-a69a-ce3a6f9f7875&#xD;
[xUnit.net 00:00:09.60]       x-ms-version: REDACTED&#xD;
[xUnit.net 00:00:09.60]       X-Content-Type-Options: REDACTED&#xD;
[xUnit.net 00:00:09.60]       Preference-Applied: REDACTED&#xD;
[xUnit.net 00:00:09.60]       Date: Mon, 23 Jan 2023 22:31:53 GMT&#xD;
[xUnit.net 00:00:09.60]       Connection: keep-alive&#xD;
[xUnit.net 00:00:09.60]       Content-Type: application/json; odata=minimalmetadata; streaming=true; charset=utf-8&#xD;
[xUnit.net 00:00:09.60]       Content-Length: 203&#xD;
[xUnit.net 00:00:09.60]       &#xD;
[xUnit.net 00:00:09.60]       Stack Trace:&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(192,0): at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag)&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(113,0): at Orleans.Storage.AzureTableGrainStorage.WriteStateAsync[T](String grainType, GrainId grainId, IGrainState`1 grainState)&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Orleans.Runtime\Storage\StateStorageBridge.cs(93,0): at Orleans.Core.StateStorageBridge`1.WriteStateAsync()&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Orleans.Core.Abstractions\Runtime\GrainReference.cs(690,0): at Orleans.Runtime.TaskRequest.Invoke()&#xD;
[xUnit.net 00:00:09.60]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Orleans.Serialization\Invocation\ResponseCompletionSource.cs(98,0): at Orleans.Serialization.Invocation.ResponseCompletionSource.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)&#xD;
[xUnit.net 00:00:09.60]            at System.Threading.Tasks.ValueTask.ValueTaskSourceAsTask.&lt;&gt;c.&lt;.cctor&gt;b__4_0(Object state)&#xD;
[xUnit.net 00:00:09.60]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\test\TesterInternal\TestRunners\GrainPersistenceTestRunner.cs(300,0): at TestExtensions.Runners.GrainPersistenceTestsRunner.Grain_GrainStorage_SiloRestart()&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\test\Extensions\TesterAzureUtils\Persistence\PersistenceStateTests_AzureTableGrainStorage.cs(87,0): at Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_SiloRestart()&#xD;
[xUnit.net 00:00:09.60]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:09.60]         ----- Inner Stack Trace -----&#xD;
[xUnit.net 00:00:09.60]            at Azure.Data.Tables.TableRestClient.InsertEntityAsync(String table, Nullable`1 timeout, Nullable`1 responsePreference, IDictionary`2 tableEntityProperties, QueryOptions queryOptions, CancellationToken cancellationToken)&#xD;
[xUnit.net 00:00:09.60]            at Azure.Data.Tables.TableClient.AddEntityAsync[T](T entity, CancellationToken cancellationToken)&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Azure\Shared\Storage\AzureTableDataManager.cs(171,0): at Orleans.Persistence.AzureStorage.AzureTableDataManager`1.CreateTableEntryAsync(T data)&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(457,0): at Orleans.Storage.AzureTableGrainStorage.GrainStateTableDataManager.Write(TableEntity entity)&#xD;
[xUnit.net 00:00:09.60]         C:\Users\anna\orleans\src\Azure\Orleans.Persistence.AzureStorage\Providers\Storage\AzureTableStorage.cs(188,0): at Orleans.Storage.AzureTableGrainStorage.DoOptimisticUpdate(Func`1 updateOperation, String grainType, GrainId grainId, String tableName, String currentETag)&#xD;
[xUnit.net 00:00:09.60]         --- End of stack trace from previous location ---&#xD;
[xUnit.net 00:00:09.60]         &#xD;
[xUnit.net 00:00:09.60]       Output:&#xD;
[xUnit.net 00:00:09.60]         ClusterId=testcluster-2023-01-23t22-31-45-242 ServiceId=413167fbdab04be6b3673754e5db370b&#xD;
[xUnit.net 00:00:38.98]   Finished:    Tester.AzureUtils&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="cloudtest-win10" outcome="Min" timestamp="2023-01-23T22:31:53.9492295+00:00">
        <Text>[xUnit.net 00:00:09.60]     Tester.AzureUtils.Persistence.PersistenceStateTests_AzureTableGrainStorage.Grain_AzureTableGrainStorage_SiloRestart [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="cloudtest-win10" outcome="Warning" timestamp="2023-01-23T22:32:23.4681280+00:00">
        <Text>Data collector 'Blame' message: All tests finished running, Sequence file will not be generated.</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>